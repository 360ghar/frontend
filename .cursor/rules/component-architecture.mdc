---
description: 
globs: 
alwaysApply: true
---
# Component Architecture

## Component Organization
- `src/common/` - Site-wide components (footer, headers)
- `src/components/items/` - Reusable UI elements/widgets
- `src/pages/` - Full page components

## Data Flow
- Data is primarily imported from files in `src/data/`
- Context API (in `src/contextApi/`) manages global state
- Props are used for component-specific data

## Component Patterns
- Components are generally function components using React hooks
- Forms utilize Formik and Yup for validation
- Styling is done via SASS files in `public/assets/sass/`
- Multiple homepage variations share components but with different data sources

## Best Practices
- When creating new components:
  1. Follow existing naming conventions
  2. Place in appropriate directory based on use case
  3. Use data files for content rather than hardcoding
  4. Create corresponding styles in SASS directory
